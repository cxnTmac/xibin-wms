<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xibin.wms.dao.BsCustomerRecordMapper" >
  <resultMap id="BaseResultMap" type="com.xibin.wms.pojo.BsCustomerRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_code" property="customerCode" jdbcType="VARCHAR" />
      <result column="abstractt" property="abstractt" jdbcType="VARCHAR" />
      <result column="auxi_id" property="auxiId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
      <result column="pay" property="pay" jdbcType="DOUBLE" />
      <result column="type" property="type" jdbcType="VARCHAR" />
      <result column="voucher_id" property="voucherId" jdbcType="INTEGER" />
      <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
  </resultMap>

    <resultMap id="QueryResultMap" type="com.xibin.wms.query.BsCustomerRecordQueryItem" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="customer_code" property="customerCode" jdbcType="VARCHAR" />
        <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
        <result column="abstractt" property="abstractt" jdbcType="VARCHAR" />
        <result column="auxi_id" property="auxiId" jdbcType="INTEGER" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="pay" property="pay" jdbcType="DOUBLE" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="voucher_id" property="voucherId" jdbcType="INTEGER" />
        <result column="date" property="date" jdbcType="TIMESTAMP" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="creator" property="creator" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modifier" property="modifier" jdbcType="INTEGER" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
        <result column="company_id" property="companyId" jdbcType="INTEGER" />
    </resultMap>
  <sql id="Base_Column_List" >
    bcr.id, bcr.customer_code, bcr.abstractt, bcr.auxi_id,bcr.order_no,bcr.pay,bcr.type,bcr.voucher_id,bcr.date,
      bcr.remark, bcr.creator, bcr.create_time, bcr.modifier, bcr.modify_time, bcr.rec_ver,
      bcr.company_id
  </sql>
  
  <!-- 条件 -->
  <sql id="findByConditionWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND bcr.id = #{id}</if>
          <if test="customerCode!=null and customerCode!=''"> AND bcr.customer_code = #{customerCode}</if>
          <if test="orderNo!=null and orderNo!=''"> AND bcr.order_no = #{orderNo}</if>
          <if test="abstractt!=null and abstractt!=''"> AND bcr.abstractt = #{abstractt}</if>
          <if test="type!=null and type!=''"> AND bcr.type = #{type}</if>
          <if test="voucherId!=null and voucherId!=''"> AND bcr.voucher_id = #{voucherId}</if>
          <if test="dateFm!=null and dateFm!=''"> AND bcr.date &gt;= #{dateFm}</if>
          <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt;= #{dateTo} </if>
          <if test="companyId!=null and companyId!=''"> AND bcr.company_id = #{companyId}</if>
<!--          <if test="fuzzyCondition!=null and fuzzyCondition!=''">AND (ba.area_name LIKE CONCAT('%','${fuzzyCondition}','%')-->
<!--           OR ba.area_code LIKE CONCAT('%','${fuzzyCondition}','%'))</if>-->
  </sql>
  <!-- 条件 -->
  <sql id="findByExampleWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND bcr.id = #{id}</if>
      <if test="customerCode!=null and customerCode!=''"> AND bcr.customer_code = #{customerCode}</if>
      <if test="orderNo!=null and orderNo!=''"> AND bcr.order_no = #{orderNo}</if>
      <if test="abstractt!=null and abstractt!=''"> AND bcr.abstractt = #{abstractt}</if>
      <if test="type!=null and type!=''"> AND bcr.abstractt = #{type}</if>
      <if test="voucherId!=null and voucherId!=''"> AND bcr.voucher_id = #{voucherId}</if>
      <if test="companyId!=null and companyId!=''"> AND bcr.company_id = #{companyId}</if>
  </sql>
  <!-- 【固定】：按主键查询 -->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  select
      <include refid="Base_Column_List"/>
      from bs_customer_record bcr
      WHERE id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
	           #{item}
	  </foreach>
  </select>
  
  <!-- 【固定】：插入记录（支持一条及多条） -->
  <insert id="insert" parameterType="java.util.List">
  	INSERT INTO bs_customer_record
          (id, customer_code, abstractt, auxi_id,order_no,pay,type,voucher_id,date,remark, creator, create_time, modifier, modify_time, rec_ver,
    company_id)
       VALUES
  		<foreach collection="list" item="item" index="index" separator=",">
	   		(#{item.id}, #{item.customerCode}, #{item.abstractt}, #{item.auxiId},#{item.orderNo},#{item.pay},#{item.type},#{item.voucherId},#{item.date},
            #{item.remark},#{item.creator},#{item.createTime}, #{item.modifier},  #{item.modifyTime},
      #{item.recVer}, #{item.companyId})
  		</foreach>
  </insert>
  
  <!-- 【固定】：删除记录 -->
  <delete id="delete" parameterType="java.lang.reflect.Array">
      DELETE FROM bs_customer_record WHERE id in
   <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   </foreach>
  </delete>
  
  <!-- 【固定】：更新记录（支持一条及多条） -->
  <update id="update" parameterType="java.util.Collection">
	UPDATE bs_customer_record
	<trim prefix="set" suffixOverrides=",">
		<!-- 更新的字段集合 -->
		<trim prefix="customer_code =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.customerCode}
             </foreach>
		</trim>
		<trim prefix="abstractt =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.abstractt}
             </foreach>
		</trim>
        <trim prefix="auxi_id =case"  suffix="end,"  >
            <foreach collection="list" item="item" index="index">
                when (ID=#{item.id}) then #{item.auxiId}
            </foreach>
        </trim>
        <trim prefix="order_no =case"  suffix="end,"  >
            <foreach collection="list" item="item" index="index">
                when (ID=#{item.id}) then #{item.orderNo}
            </foreach>
        </trim>
        <trim prefix="pay =case"  suffix="end,"  >
            <foreach collection="list" item="item" index="index">
                when (ID=#{item.id}) then #{item.pay}
            </foreach>
        </trim>
        <trim prefix="type =case"  suffix="end,"  >
            <foreach collection="list" item="item" index="index">
                when (ID=#{item.id}) then #{item.type}
            </foreach>
        </trim>
        <trim prefix="voucher_id =case"  suffix="end,"  >
            <foreach collection="list" item="item" index="index">
                when (ID=#{item.id}) then #{item.voucherId}
            </foreach>
        </trim>
        <trim prefix="date =case"  suffix="end,"  >
            <foreach collection="list" item="item" index="index">
                when (ID=#{item.id}) then #{item.date}
            </foreach>
        </trim>

		<trim prefix="remark =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.remark}
             </foreach>
		</trim>
		
		
		<trim prefix="modifier =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifier}
             </foreach>
		</trim>
		<trim prefix="modify_time =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifyTime}
             </foreach>
		</trim>
		<trim prefix="rec_ver =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.recVer}
             </foreach>
		</trim>
		<trim prefix="company_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.companyId}
             </foreach>
		</trim>
	</trim>
	WHERE
	<foreach collection="list" separator="or" item="item" index="index" >
		<if test="item.id!=null">
		(ID=#{item.id}) AND (REC_VER=#{item.recVer}-1)
		</if>
	</foreach>	
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_customer_record bcr
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByPage" resultMap="QueryResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
      ,bc.customer_name
    from bs_customer_record bcr
      left join bd_customer bc on bc.customer_code = bcr.customer_code and bc.company_id = bcr.company_id
    <include refid="findByConditionWhere" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xibin.wms.pojo.BdArea">
    select 
    <include refid="Base_Column_List" />
    from bs_customer_record bcr
    <include refid="findByExampleWhere" />
  </select>

    <select id="getBalanceByCustomerCode" resultType="Double" parameterType="Map" >
        select
        sum(IF(bcr.`type` IN ('X_SALE','S_SALE','X_PURCHASE','S_PURCHASE'),bcr.pay,-bcr.pay))
        from bs_customer_record bcr
        WHERE 1= 1 AND
        bcr.customer_code = #{customerCode}
        <if test="dateFm!=null and dateFm!=''"> AND bcr.date &gt;= #{dateFm}</if>
        <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt; #{dateTo} </if>
        AND bcr.company_id = #{companyId}
    </select>



    <select id="monthReport" resultType="Map"  parameterType="Map" >
        SELECT bc.customer_name,SALE.pay AS salePay,RECEIVE.pay AS receivePay,DIS.pay AS disPay,RE.pay AS rePay,FREIGHT.pay AS freightPay,bc.balance+BALANCE.balance AS balance
        FROM bd_customer bc
        LEFT JOIN
        (
        SELECT bcr.customer_code, SUM(bcr.pay) AS pay,bcr.company_id
        FROM bs_customer_record bcr
        WHERE
        1=1
        <if test="dateFm!=null and dateFm!=''"> AND bcr.date &gt;= #{dateFm}</if>
        <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt; #{dateTo} </if>
        AND bcr.`type` IN ('X_SALE','S_SALE')
        GROUP BY bcr.customer_code) SALE ON SALE.customer_code = bc.customer_code AND SALE.company_id = bc.company_id
        LEFT JOIN
        (
        SELECT bcr.customer_code, SUM(bcr.pay) AS pay,bcr.company_id
        FROM bs_customer_record bcr
        WHERE
        1=1
        <if test="dateFm!=null and dateFm!=''"> AND bcr.date &gt;= #{dateFm}</if>
        <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt; #{dateTo} </if>
        AND bcr.`type` IN ('RECEIVE')
        GROUP BY bcr.customer_code) RECEIVE ON RECEIVE.customer_code = bc.customer_code AND RECEIVE.company_id = bc.company_id
        LEFT JOIN
        (
        SELECT bcr.customer_code, SUM(bcr.pay) AS pay,bcr.company_id
        FROM bs_customer_record bcr
        WHERE
        1=1
        <if test="dateFm!=null and dateFm!=''"> AND bcr.date &gt;= #{dateFm}</if>
        <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt; #{dateTo} </if>
        AND bcr.`type` IN ('DISCOUNT','PRICE_DIFFRENCT')
        GROUP BY bcr.customer_code) DIS ON DIS.customer_code = bc.customer_code AND DIS.company_id = bc.company_id
        LEFT JOIN
        (
        SELECT bcr.customer_code, SUM(bcr.pay) AS pay,bcr.company_id
        FROM bs_customer_record bcr
        WHERE
        1=1
        <if test="dateFm!=null and dateFm!=''"> AND bcr.date &gt;= #{dateFm}</if>
        <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt; #{dateTo} </if>
        AND bcr.`type` IN ('RETURN')
        GROUP BY bcr.customer_code) RE ON RE.customer_code = bc.customer_code AND RE.company_id = bc.company_id
        LEFT JOIN
        (
        SELECT bcr.customer_code, SUM(bcr.pay) AS pay,bcr.company_id
        FROM bs_customer_record bcr
        WHERE
        1=1
        <if test="dateFm!=null and dateFm!=''"> AND bcr.date &gt;= #{dateFm}</if>
        <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt; #{dateTo} </if>
        AND bcr.`type` IN ('FREIGHT_COLLECT')
        GROUP BY bcr.customer_code) FREIGHT ON FREIGHT.customer_code = bc.customer_code AND FREIGHT.company_id = bc.company_id
        LEFT JOIN
        (
        SELECT bcr.customer_code,SUM(IF(bcr.`type` IN ('X_SALE','S_SALE','X_PURCHASE','S_PURCHASE'),bcr.pay,-bcr.pay)) AS balance,bcr.company_id
        FROM bs_customer_record bcr
        GROUP BY bcr.customer_code) BALANCE ON BALANCE.customer_code = bc.customer_code AND BALANCE.company_id = bc.company_id
        WHERE
        1=1
        <if test="dateTo!=null and dateTo!=''"> AND bcr.date &lt; #{dateFm} </if>
        AND bc.customer_type LIKE CONCAT('%','${customerType}','%')
        AND bc.company_id  = #{companyId}
        ORDER BY SALE.pay DESC
    </select>
</mapper>