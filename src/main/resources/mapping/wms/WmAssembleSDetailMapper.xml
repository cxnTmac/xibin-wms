<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xibin.wms.dao.WmAssembleSDetailMapper" >
  <resultMap id="BaseResultMap" type="com.xibin.wms.pojo.WmAssembleSDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="line_no" property="lineNo" jdbcType="VARCHAR" />
    <result column="f_line_no" property="fLineNo" jdbcType="VARCHAR" />
    <result column="fitting_sku_code" property="fittingSkuCode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="assemble_loc" property="assembleLoc" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="DOUBLE" />
    <result column="alloc_num" property="allocNum" jdbcType="DOUBLE" />
    <result column="pick_num" property="pickNum" jdbcType="DOUBLE" />
    <result column="assemble_num" property="assembleNum" jdbcType="DOUBLE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="QueryResultMap" type="com.xibin.wms.query.WmAssembleSDetailQueryItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="line_no" property="lineNo" jdbcType="VARCHAR" />
    <result column="f_line_no" property="fLineNo" jdbcType="VARCHAR" />
    <result column="fitting_sku_code" property="fittingSkuCode" jdbcType="VARCHAR" />
    <result column="fitting_sku_name" property="fittingSkuName" jdbcType="VARCHAR" />
    <result column="model_code" property="modelCode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="assemble_loc" property="assembleLoc" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="DOUBLE" />
    <result column="alloc_num" property="allocNum" jdbcType="DOUBLE" />
    <result column="pick_num" property="pickNum" jdbcType="DOUBLE" />
    <result column="assemble_num" property="assembleNum" jdbcType="DOUBLE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    wasd.id, wasd.order_no,wasd.line_no,wasd.f_line_no,wasd.fitting_sku_code,wasd.status,wasd.assemble_loc,wasd.num, wasd.alloc_num,wasd.pick_num,wasd.assemble_num,wasd.remark, 
    wasd.creator, wasd.create_time, wasd.modifier, wasd.modify_time, wasd.rec_ver, wasd.company_id, wasd.warehouse_id
  </sql>
  
  <!-- 条件 -->
  <sql id="findByConditionWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND wasd.id = #{id}</if>
          <if test="orderNo!=null and orderNo!=''"> AND wasd.order_no = #{orderNo}</if>
          <if test="fittingSkuCode!=null and fittingSkuCode!=''"> AND wasd.fitting_sku_code LIKE CONCAT('%','${fittingSkuCode}','%')</if>
          <if test="companyId!=null and companyId!=''"> AND wasd.company_id = #{companyId}</if>
          <if test="warehouseId!=null and warehouseId!=''"> AND wasd.warehouse_id = #{warehouseId}</if>
  </sql>
  <!-- 条件 -->
  <sql id="findByExampleWhere">
      WHERE 1=1
         <if test="id!=null and id!=''"> AND wasd.id = #{id}</if>
          <if test="orderNo!=null and orderNo!=''"> AND wasd.order_no = #{orderNo}</if>
          <if test="lineNo!=null and lineNo!=''"> AND wasd.line_no = #{lineNo}</if>
          <if test="fLineNo!=null and fLineNo!=''"> AND wasd.f_line_no = #{fLineNo}</if>
          <if test="fittingSkuCode!=null and fittingSkuCode!=''"> AND wasd.fitting_sku_code = #{fittingSkuCode}</if>
          <if test="companyId!=null and companyId!=''"> AND wasd.company_id = #{companyId}</if>
          <if test="warehouseId!=null and warehouseId!=''"> AND wasd.warehouse_id = #{warehouseId}</if>
  </sql>
  <!-- 【固定】：按主键查询 -->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  select
      <include refid="Base_Column_List"/>
      from wm_assemble_s_detail
      WHERE id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
	           #{item}
	  </foreach>
  </select>
  
  <!-- 【固定】：插入记录（支持一条及多条） -->
  <insert id="insert" parameterType="java.util.List">
  	INSERT INTO wm_assemble_s_detail
          (id, order_no,line_no,f_line_no,fitting_sku_code,status,assemble_loc,num,alloc_num,pick_num,assemble_num,remark, 
    creator,create_time,modifier, modify_time, rec_ver, company_id, warehouse_id)
       VALUES
  		<foreach collection="list" item="item" index="index" separator=",">
	   		(#{item.id}, #{item.orderNo}, #{item.lineNo},#{item.fLineNo},#{item.fittingSkuCode},#{item.status},
      #{item.assembleLoc},#{item.num},#{item.allocNum},#{item.pickNum},#{item.assembleNum},
      #{item.remark}, #{item.creator},#{item.createTime},#{item.modifier}, #{item.modifyTime}, 
      #{item.recVer}, #{item.companyId},#{item.warehouseId})
  		</foreach>
  </insert>
  
  <!-- 【固定】：删除记录 -->
  <delete id="delete" parameterType="java.lang.reflect.Array">
      DELETE FROM wm_assemble_s_detail WHERE ID in 
   <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   </foreach>
  </delete>
  
  <!-- 【固定】：更新记录（支持一条及多条） -->
  <update id="update" parameterType="java.util.Collection">
	UPDATE wm_assemble_s_detail
	<trim prefix="set" suffixOverrides=",">
		<!-- 更新的字段集合 -->
		<trim prefix="order_no =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.orderNo}
             </foreach>
		</trim>
		<trim prefix="line_no =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.lineNo}
             </foreach>
		</trim>
		<trim prefix="f_line_no =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.fLineNo}
             </foreach>
		</trim>
		<trim prefix="fitting_sku_code =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.fittingSkuCode}
             </foreach>
		</trim>
		<trim prefix="status =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.status}
             </foreach>
		</trim>
		<trim prefix="assemble_loc =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.assembleLoc}
             </foreach>
		</trim>
		<trim prefix="num =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.num}
             </foreach>
		</trim>
		
		<trim prefix="alloc_num =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.allocNum}
             </foreach>
		</trim>
		<trim prefix="pick_num =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.pickNum}
             </foreach>
		</trim>
		<trim prefix="assemble_num =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.assembleNum}
             </foreach>
		</trim>
		
		<trim prefix="remark =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.remark}
             </foreach>
		</trim>
		
		
		
		<trim prefix="modifier =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifier}
             </foreach>
		</trim>
		<trim prefix="modify_time =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifyTime}
             </foreach>
		</trim>
		<trim prefix="rec_ver =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.recVer}
             </foreach>
		</trim>
		<trim prefix="company_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.companyId}
             </foreach>
		</trim>
		<trim prefix="warehouse_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.warehouseId}
             </foreach>
		</trim>
	</trim>
	WHERE
	<foreach collection="list" separator="or" item="item" index="index" >
		<if test="item.id!=null">
		(ID=#{item.id}) AND (REC_VER=#{item.recVer}-1)
		</if>
	</foreach>	
  </update>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wm_assemble_s_detail wasd
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByOrderNo" resultMap="QueryResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    ,bfs.fitting_sku_name
    ,bfs.model_code
    from wm_assemble_s_detail wasd
    left join bd_fitting_sku bfs on
    bfs.fitting_sku_code  = wasd.fitting_sku_code
    and bfs.company_id = wasd.company_id
    where 
    1=1
    and wasd.order_no = #{orderNo}
    and 
    wasd.company_id = #{companyId}
    and
    wasd.warehouse_id = #{warehouseId}
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xibin.wms.pojo.WmAssembleFDetail">
    select 
    <include refid="Base_Column_List" />
    from wm_assemble_s_detail wasd
    <include refid="findByExampleWhere" />
  </select>
  <select id="selectByKey" resultMap="BaseResultMap" resultType="java.util.List"  parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from wm_assemble_s_detail wasd
    where wasd.order_no = #{orderNo}
    and
    wasd.line_no = #{lineNo}
    and 
    wasd.company_id = #{companyId}
    and
    wasd.warehouse_id = #{warehouseId}
  </select>
  
</mapper>