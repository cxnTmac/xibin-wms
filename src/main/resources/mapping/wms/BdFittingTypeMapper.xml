<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xibin.wms.dao.BdFittingTypeMapper" >
  <resultMap id="BaseResultMap" type="com.xibin.wms.pojo.BdFittingType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fitting_type_code" property="fittingTypeCode" jdbcType="VARCHAR" />
    <result column="fitting_type_name" property="fittingTypeName" jdbcType="VARCHAR" />
    <result column="fitting_type_status" property="fittingTypeStatus" jdbcType="VARCHAR" />
    <result column="fitting_type_remark" property="fittingTypeRemark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fitting_type_code, fitting_type_name, fitting_type_status, fitting_type_remark, 
    create_time, creator, modify_time, modifier, rec_ver, company_id
  </sql>
  <!-- 条件 -->
  <sql id="findByExampleWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND id = #{id}</if>
          <if test="fittingTypeCode!=null and fittingTypeCode!=''"> AND fitting_type_code = #{fittingTypeCode}</if>
          <if test="fittingTypeName!=null and fittingTypeName!=''"> AND fitting_type_name = #{fittingTypeName}</if>
          
          <if test="companyId!=null and companyId!=''"> AND company_id = #{companyId}</if>
          
  </sql>
  <!-- 条件 -->
  <sql id="findByConditionWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND id = #{id}</if>
          <if test="fittingTypeCode!=null and fittingTypeCode!=''"> AND fitting_type_code LIKE CONCAT('%','${fittingTypeCode}','%')</if>
          <if test="fittingTypeName!=null and fittingTypeName!=''"> AND fitting_type_name LIKE CONCAT('%','${fittingTypeName}','%')</if>
          <if test="companyId!=null and companyId!=''"> AND company_id = #{companyId}</if>
          <if test="fuzzyCondition!=null and fuzzyCondition!=''">AND (fitting_type_code LIKE CONCAT('%','${fuzzyCondition}','%')
          OR fitting_type_name LIKE CONCAT('%','${fuzzyCondition}','%'))</if>
  </sql>
  <!-- 【固定】：按主键查询 -->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  select
      <include refid="Base_Column_List"/>
      from bd_fitting_type
      WHERE id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
	           #{item}
	  </foreach>
  </select>
  
  <!-- 【固定】：插入记录（支持一条及多条） -->
  <insert id="insert" parameterType="java.util.List">
  	INSERT INTO bd_fitting_type
          (id, fitting_type_code, fitting_type_name, fitting_type_status, fitting_type_remark, 
    create_time, creator, modify_time, modifier, rec_ver, company_id)
       VALUES
  		<foreach collection="list" item="item" index="index" separator=",">
	   		(#{item.id}, #{item.fittingTypeCode}, #{item.fittingTypeName}, 
      #{item.fittingTypeStatus}, #{item.fittingTypeRemark}, #{item.createTime}, 
      #{item.creator}, #{item.modifyTime}, #{item.modifier}, 
      #{item.recVer}, #{item.companyId})
  		</foreach>
  </insert>
  
  <!-- 【固定】：删除记录 -->
  <delete id="delete" parameterType="java.lang.reflect.Array">
      DELETE FROM bd_fitting_type WHERE ID in 
   <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   </foreach>
  </delete>
  
  <!-- 【固定】：更新记录（支持一条及多条） -->
  <update id="update" parameterType="java.util.Collection">
	UPDATE bd_fitting_type
	<trim prefix="set" suffixOverrides=",">
		<!-- 更新的字段集合 -->
		<trim prefix="fitting_type_code =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.fittingTypeCode}
             </foreach>
		</trim>
		<trim prefix="fitting_type_name =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.fittingTypeName}
             </foreach>
		</trim>
		<trim prefix="fitting_type_status =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.fittingTypeStatus}
             </foreach>
		</trim>
		<trim prefix="fitting_type_remark =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.fittingTypeRemark}
             </foreach>
		</trim>
		<trim prefix="modifier =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifier}
             </foreach>
		</trim>
		<trim prefix="modify_time =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifyTime}
             </foreach>
		</trim>
		<trim prefix="rec_ver =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.recVer}
             </foreach>
		</trim>
		<trim prefix="company_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.companyId}
             </foreach>
		</trim>
	</trim>
	WHERE
	<foreach collection="list" separator="or" item="item" index="index" >
		<if test="item.id!=null">
		(ID=#{item.id}) AND (REC_VER=#{item.recVer}-1)
		</if>
	</foreach>	
  </update>
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bd_fitting_type
    where id = #{id,jdbcType=INTEGER}
  </select>
   
  <select id="selectAllByPage" resultMap="BaseResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    from bd_fitting_type
    <include refid="findByConditionWhere" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xibin.wms.pojo.BdFittingType">
    select 
    <include refid="Base_Column_List" />
    from bd_fitting_type
    <include refid="findByExampleWhere" />
  </select>
  <select id="selectByKey" resultMap="BaseResultMap" resultType="java.util.List"  parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bd_fitting_type
    where fitting_type_code = #{fittingTypeCode,jdbcType=VARCHAR}
    and 
    company_id = #{companyId,jdbcType=INTEGER}
  </select>
  
</mapper>